From 0679b3b30c0f76effdcaf07f6dce805f060da4c4 Mon Sep 17 00:00:00 2001
From: Artem Borisov <dedsa2002@gmail.com>
Date: Tue, 14 Aug 2018 14:11:26 +0300
Subject: [PATCH 8/9] Revert "WifiP2pNative: Remove hard-coded interface name"

This reverts commit f1c6145af9fae7b777938c7cab8a17dd2a8e7eff.
---
 service/java/com/android/server/wifi/WifiInjector.java   |  3 ++-
 .../java/com/android/server/wifi/p2p/WifiP2pNative.java  | 16 ++++++++++------
 2 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/service/java/com/android/server/wifi/WifiInjector.java b/service/java/com/android/server/wifi/WifiInjector.java
index 0e30af8..cb33e16 100644
--- a/service/java/com/android/server/wifi/WifiInjector.java
+++ b/service/java/com/android/server/wifi/WifiInjector.java
@@ -195,7 +195,8 @@ public class WifiInjector {
                 mWifiMonitor, mNwManagementService, mPropertyService, mWifiMetrics);
         mWifiP2pMonitor = new WifiP2pMonitor(this);
         mSupplicantP2pIfaceHal = new SupplicantP2pIfaceHal(mWifiP2pMonitor);
-        mWifiP2pNative = new WifiP2pNative(mSupplicantP2pIfaceHal, mHalDeviceManager);
+        mWifiP2pNative = new WifiP2pNative(SystemProperties.get("wifi.direct.interface", "p2p0"),
+                mSupplicantP2pIfaceHal, mHalDeviceManager);
 
         // Now get instances of all the objects that depend on the HandlerThreads
         mTrafficPoller = new WifiTrafficPoller(mContext, mWifiServiceHandlerThread.getLooper(),
diff --git a/service/java/com/android/server/wifi/p2p/WifiP2pNative.java b/service/java/com/android/server/wifi/p2p/WifiP2pNative.java
index 8d4d18b..5e5c384 100644
--- a/service/java/com/android/server/wifi/p2p/WifiP2pNative.java
+++ b/service/java/com/android/server/wifi/p2p/WifiP2pNative.java
@@ -34,12 +34,16 @@ import com.android.server.wifi.HalDeviceManager;
  * {@hide}
  */
 public class WifiP2pNative {
-    private static final String TAG = "WifiP2pNative";
+    private final String mTAG;
+    private final String mInterfaceName;
     private final SupplicantP2pIfaceHal mSupplicantP2pIfaceHal;
     private final HalDeviceManager mHalDeviceManager;
     private IWifiP2pIface mIWifiP2pIface;
 
-    public WifiP2pNative(SupplicantP2pIfaceHal p2pIfaceHal, HalDeviceManager halDeviceManager) {
+    public WifiP2pNative(String interfaceName, SupplicantP2pIfaceHal p2pIfaceHal,
+                         HalDeviceManager halDeviceManager) {
+        mTAG = "WifiP2pNative-" + interfaceName;
+        mInterfaceName = interfaceName;
         mSupplicantP2pIfaceHal = p2pIfaceHal;
         mHalDeviceManager = halDeviceManager;
     }
@@ -95,22 +99,22 @@ public class WifiP2pNative {
             Handler handler) {
         if (mIWifiP2pIface == null) {
             mIWifiP2pIface = mHalDeviceManager.createP2pIface((@NonNull String ifaceName) -> {
-                Log.i(TAG, "IWifiP2pIface destroyedListener");
+                Log.i(mTAG, "IWifiP2pIface destroyedListener");
                 mSupplicantP2pIfaceHal.teardownIface(ifaceName);
                 mIWifiP2pIface = null;
                 destroyedListener.onDestroyed(ifaceName);
             }, handler);
             if (mIWifiP2pIface == null) {
-                Log.e(TAG, "Failed to create P2p iface in HalDeviceManager");
+                Log.e(mTAG, "Failed to create P2p iface in HalDeviceManager");
                 return null;
             }
             if (!waitForSupplicantConnection()) {
-                Log.e(TAG, "Failed to connect to supplicant");
+                Log.e(mTAG, "Failed to connect to supplicant");
                 teardownInterface();
                 return null;
             }
             if (!mSupplicantP2pIfaceHal.setupIface(HalDeviceManager.getName(mIWifiP2pIface))) {
-                Log.e(TAG, "Failed to setup P2p iface in supplicant");
+                Log.e(mTAG, "Failed to setup P2p iface in supplicant");
                 teardownInterface();
                 return null;
             }
-- 
2.7.4

