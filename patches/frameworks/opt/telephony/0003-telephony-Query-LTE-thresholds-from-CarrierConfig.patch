From ace76cb22344932e92d28905d9dafb54f3aaeefc Mon Sep 17 00:00:00 2001
From: Artem Borisov <dedsa2002@gmail.com>
Date: Tue, 21 Aug 2018 14:02:11 +0300
Subject: [PATCH 3/3] telephony: Query LTE thresholds from CarrierConfig

config_lteDbmThresholds is not used anymore in P.
CarrierConfig stores only 4 thresholds, ignoring two
"unknown" ones, as they should always equal -44 and 140,
so let's fix our code and move to this.

Change-Id: I0d8a59d5310b001b3da9718e8f286c190269509c
---
 src/java/com/android/internal/telephony/RIL.java | 43 ++++++++++++------------
 1 file changed, 22 insertions(+), 21 deletions(-)

diff --git a/src/java/com/android/internal/telephony/RIL.java b/src/java/com/android/internal/telephony/RIL.java
index c5d2494..7c65dda 100644
--- a/src/java/com/android/internal/telephony/RIL.java
+++ b/src/java/com/android/internal/telephony/RIL.java
@@ -72,6 +72,7 @@ import android.os.SystemProperties;
 import android.os.WorkSource;
 import android.service.carrier.CarrierIdentifier;
 import android.telephony.AccessNetworkConstants.AccessNetworkType;
+import android.telephony.CarrierConfigManager;
 import android.telephony.CellIdentity;
 import android.telephony.CellIdentityCdma;
 import android.telephony.CellInfo;
@@ -5594,35 +5595,35 @@ public class RIL extends BaseCommands implements CommandsInterface {
             radioTech = tm.getVoiceNetworkType(phoneId);
         }
 
-        int[] threshRsrp = Resources.getSystem().getIntArray(
-                com.android.internal.R.array.config_lteDbmThresholds);
+        int[] threshRsrp = CarrierConfigManager.getDefaultConfig().getIntArray(
+                CarrierConfigManager.KEY_LTE_RSRP_THRESHOLDS_INT_ARRAY);
 
-         if (sSignalCust != null && threshRsrp.length == 6) {
+         if (sSignalCust != null && threshRsrp.length == 4) {
             switch (radioTech) {
                 case NETWORK_TYPE_LTE_CA:
                 case NETWORK_TYPE_LTE:
                     if (lteRsrp > -44) { // None or Unknown
-                        lteRsrp = threshRsrp[5] + 1;
+                        lteRsrp = -43;
                         lteRssnr = 301;
                         lteSignalStrength = 99;
                     } else if (lteRsrp >= sSignalCust[1][3]) { // Great
-                        lteRsrp = threshRsrp[4];
+                        lteRsrp = threshRsrp[3];
                         lteRssnr = 130;
                         lteSignalStrength = 12;
                     } else if (lteRsrp >= sSignalCust[1][2]) { // Good
-                        lteRsrp = threshRsrp[3];
+                        lteRsrp = threshRsrp[2];
                         lteRssnr = 45;
                         lteSignalStrength = 8;
                     } else if (lteRsrp >= sSignalCust[1][1]) { // Moderate
-                        lteRsrp = threshRsrp[2];
+                        lteRsrp = threshRsrp[1];
                         lteRssnr = 10;
                         lteSignalStrength = 5;
                     } else if (lteRsrp >= sSignalCust[1][0]) { // Poor
-                        lteRsrp = threshRsrp[1];
+                        lteRsrp = threshRsrp[0];
                         lteRssnr = -30;
                         lteSignalStrength = 0;
                     } else { // None or Unknown
-                        lteRsrp = threshRsrp[0];
+                        lteRsrp = -140;
                         lteRssnr = -200;
                         lteSignalStrength = 99;
                     }
@@ -5634,27 +5635,27 @@ public class RIL extends BaseCommands implements CommandsInterface {
                 case NETWORK_TYPE_UMTS:
                     lteRsrp = (gsmSignalStrength & 0xFF) - 256;
                     if (lteRsrp > -20) { // None or Unknown
-                        lteRsrp = threshRsrp[5] + 1;
+                        lteRsrp = -43;
                         lteRssnr = 301;
                         lteSignalStrength = 99;
                     } else if (lteRsrp >= sSignalCust[2][3]) { // Great
-                        lteRsrp = threshRsrp[4];
+                        lteRsrp = threshRsrp[3];
                         lteRssnr = 130;
                         lteSignalStrength = 12;
                     } else if (lteRsrp >= sSignalCust[2][2]) { // Good
-                        lteRsrp = threshRsrp[3];
+                        lteRsrp = threshRsrp[2];
                         lteRssnr = 45;
                         lteSignalStrength = 8;
                     } else if (lteRsrp >= sSignalCust[2][1]) { // Moderate
-                        lteRsrp = threshRsrp[2];
+                        lteRsrp = threshRsrp[1];
                         lteRssnr = 10;
                         lteSignalStrength = 5;
                     } else if (lteRsrp >= sSignalCust[2][0]) { // Poor
-                        lteRsrp = threshRsrp[1];
+                        lteRsrp = threshRsrp[0];
                         lteRssnr = -30;
                         lteSignalStrength = 0;
                     } else { // None or Unknown
-                        lteRsrp = threshRsrp[0];
+                        lteRsrp = -140;
                         lteRssnr = -200;
                         lteSignalStrength = 99;
                     }
@@ -5662,27 +5663,27 @@ public class RIL extends BaseCommands implements CommandsInterface {
                 default:
                     lteRsrp = (gsmSignalStrength & 0xFF) - 256;
                     if (lteRsrp > -20) { // None or Unknown
-                        lteRsrp = threshRsrp[5] + 1;
+                        lteRsrp = -43;
                         lteRssnr = 301;
                         lteSignalStrength = 99;
                     } else if (lteRsrp >= sSignalCust[0][3]) { // Great
-                        lteRsrp = threshRsrp[4];
+                        lteRsrp = threshRsrp[3];
                         lteRssnr = 130;
                         lteSignalStrength = 12;
                     } else if (lteRsrp >= sSignalCust[0][2]) { // Good
-                        lteRsrp = threshRsrp[3];
+                        lteRsrp = threshRsrp[2];
                         lteRssnr = 45;
                         lteSignalStrength = 8;
                     } else if (lteRsrp >= sSignalCust[0][1]) { // Moderate
-                        lteRsrp = threshRsrp[2];
+                        lteRsrp = threshRsrp[1];
                         lteRssnr = 10;
                         lteSignalStrength = 5;
                     } else if (lteRsrp >= sSignalCust[0][0]) { // Poor
-                        lteRsrp = threshRsrp[1];
+                        lteRsrp = threshRsrp[0];
                         lteRssnr = -30;
                         lteSignalStrength = 0;
                     } else { // None or Unknown
-                        lteRsrp = threshRsrp[0];
+                        lteRsrp = -140;
                         lteRssnr = -200;
                         lteSignalStrength = 99;
                     }
-- 
2.7.4

